#!/usr/bin/env python3
"""
Test rapide de cam√©ra - Prend une photo et l'envoie via SSH
Usage: python3 quick_test_camera.py [IP_PC] [USERNAME]
"""

import sys
import time
import subprocess
from datetime import datetime
from picamera2 import Picamera2
import os

def take_photo():
    """Prend une photo avec PiCamera2"""
    print("üé• Test de la cam√©ra...")
    
    try:
        # Initialiser la cam√©ra
        picam2 = Picamera2()
        
        # V√©rifier les cam√©ras disponibles
        cameras = Picamera2.global_camera_info()
        print(f"üì∑ Cam√©ras d√©tect√©es: {len(cameras)}")
        
        if not cameras:
            print("‚ùå Aucune cam√©ra trouv√©e!")
            return None
            
        for i, cam in enumerate(cameras):
            print(f"  Camera {i}: {cam}")
        
        # Configuration haute r√©solution pour le test
        config = picam2.create_still_configuration(
            main={"size": (1920, 1080)}
        )
        picam2.configure(config)
        
        print("‚úÖ Configuration appliqu√©e")
        
        # D√©marrer la cam√©ra
        picam2.start()
        print("‚úÖ Cam√©ra d√©marr√©e")
        
        # Attendre stabilisation
        print("‚è≥ Stabilisation (3 secondes)...")
        time.sleep(3)
        
        # G√©n√©rer nom de fichier avec timestamp
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f"camera_test_{timestamp}.jpg"
        
        # Prendre la photo
        print(f"üì∏ Capture en cours...")
        picam2.capture_file(filename)
        
        # Arr√™ter la cam√©ra
        picam2.stop()
        
        # V√©rifier que le fichier existe
        if os.path.exists(filename):
            file_size = os.path.getsize(filename)
            print(f"‚úÖ Photo prise: {filename} ({file_size} bytes)")
            return filename
        else:
            print("‚ùå Erreur: fichier non cr√©√©")
            return None
            
    except Exception as e:
        print(f"‚ùå Erreur cam√©ra: {e}")
        import traceback
        traceback.print_exc()
        return None

def send_photo_ssh(filename, pc_ip, username):
    """Envoie la photo via SCP"""
    if not filename or not os.path.exists(filename):
        print("‚ùå Pas de fichier √† envoyer")
        return False
    
    try:
        print(f"üì° Envoi vers {username}@{pc_ip}...")
        
        # Commande SCP pour envoyer le fichier
        scp_command = [
            "scp", 
            filename, 
            f"{username}@{pc_ip}:~/Downloads/"
        ]
        
        # Ex√©cuter la commande
        result = subprocess.run(scp_command, 
                              capture_output=True, 
                              text=True, 
                              timeout=30)
        
        if result.returncode == 0:
            print(f"‚úÖ Photo envoy√©e dans ~/Downloads/ sur {pc_ip}")
            print(f"üñºÔ∏è  Fichier: {filename}")
            return True
        else:
            print(f"‚ùå Erreur SCP: {result.stderr}")
            return False
            
    except subprocess.TimeoutExpired:
        print("‚ùå Timeout lors de l'envoi")
        return False
    except Exception as e:
        print(f"‚ùå Erreur envoi: {e}")
        return False

def send_photo_local_network(filename):
    """Alternative: copie via partage r√©seau local"""
    print("üí° Alternative: Vous pouvez aussi:")
    print(f"   1. T√©l√©charger directement: scp pi@IP_PI:~/{filename} ~/Downloads/")
    print(f"   2. Ou utiliser FileZilla/WinSCP pour r√©cup√©rer: {filename}")

def main():
    print("=" * 60)
    print("üéØ Test Rapide Cam√©ra Raspberry Pi")
    print("=" * 60)
    
    # Prendre la photo
    photo_file = take_photo()
    
    if not photo_file:
        print("\n‚ùå Test √©chou√© - Probl√®me avec la cam√©ra")
        return 1
    
    print(f"\n‚úÖ Test cam√©ra r√©ussi!")
    print(f"üìÅ Fichier local: {photo_file}")
    
    # V√©rifier les arguments pour l'envoi SSH
    if len(sys.argv) >= 3:
        pc_ip = sys.argv[1]
        username = sys.argv[2]
        
        print(f"\nüîÑ Tentative d'envoi vers {username}@{pc_ip}...")
        if send_photo_ssh(photo_file, pc_ip, username):
            print("\nüéâ Test complet r√©ussi!")
            
            # Nettoyer le fichier local apr√®s envoi r√©ussi
            try:
                os.remove(photo_file)
                print(f"üóëÔ∏è  Fichier local supprim√©: {photo_file}")
            except:
                pass
        else:
            print(f"\n‚ö†Ô∏è  Envoi √©chou√©, mais photo disponible localement")
            send_photo_local_network(photo_file)
    else:
        print(f"\nüí° Pour envoyer automatiquement sur votre PC:")
        print(f"   python3 {sys.argv[0]} IP_DE_VOTRE_PC VOTRE_USERNAME")
        print(f"   Exemple: python3 {sys.argv[0]} 192.168.1.10 votrenom")
        send_photo_local_network(photo_file)
    
    return 0

if __name__ == "__main__":
    exit(main())